name: Build and test
on:
  push:
    branches:
      - main
      - staging
      - trying
  pull_request:
    branches:
      - master
jobs:
  web-ui:
    name: Vue.js app

    strategy:
      matrix:
        node-version:
          - 16.13.1

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.4.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      - name: Install
        run: |
          cd ui
          npm install
      - name: Build
        run: |
          cd ui
          npm run build
      - uses: actions/upload-artifact@v2.3.1
        with:
          name: ui-dist
          path: ui/dist/

  rust-app:
    name: Rust app
    needs:
      - web-ui

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/download-artifact@v2.1.0
        with:
          name: ui-dist
          path: ui/dist
      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          override: true
      - uses: actions/cache@v2.1.7
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Test
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --verbose
      - name: Build
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --verbose
        env:
          SKIP_UI_BUILD: true
      - name: Upload debug artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2.3.1
        with:
          name: debug_${{ matrix.os }}
          path: target/debug/sd2snes-lttp-rando-tracker.exe
      - name: Upload debug artifact
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v2.3.1
        with:
          name: debug_${{ matrix.os }}
          path: target/debug/sd2snes-lttp-rando-tracker

  rustfmt-check:
    name: Check rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          components: rustfmt
          toolchain: nightly
          override: true
      - uses: actions/cache@v2.1.7
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Check rustfmt
        uses: actions-rs/cargo@v1.0.1
        with:
          command: fmt
          args: -- --check

  clippy-check:
    name: Check cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          override: true
          components: clippy
      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
